// lib/astrologyCore.js
import fs from "fs";
import path from "path";

// ‡πÇ‡∏´‡∏•‡∏î‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡∏à‡∏≤‡∏Å‡πÑ‡∏ü‡∏•‡πå markdown core
const corePath = path.join(process.cwd(), "astrology-core-v.1.3.md");
let coreText = "";

// ‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ü‡∏•‡πå‡∏ï‡∏≠‡∏ô start
try {
  coreText = fs.readFileSync(corePath, "utf8");
  console.log("‚úÖ astrology core loaded:", corePath);
} catch (err) {
  console.error("‚ùå Cannot load astrology core file:", err.message);
}

/**
 * ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏à‡∏≥‡∏•‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢‡∏à‡∏≤‡∏Å core
 * ‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö‡∏à‡∏£‡∏¥‡∏á‡∏Ñ‡∏∏‡∏ì‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ replace ‡∏î‡πâ‡∏ß‡∏¢ LLM/Prompt ‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ core ‡∏ô‡∏µ‡πâ‡πÄ‡∏õ‡πá‡∏ô context
 */
export async function getAstrologyPrediction(question) {
  if (!coreText) {
    return "‚ùå Core astrology data not available.";
  }

  // ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏á‡πà‡∏≤‡∏¢ ‡πÜ: ‡πÄ‡∏≠‡∏≤‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡∏°‡∏≤ + extract ‡∏Ñ‡∏µ‡∏¢‡πå‡πÄ‡∏ß‡∏¥‡∏£‡πå‡∏î
  // (‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö‡∏à‡∏£‡∏¥‡∏á‡πÉ‡∏´‡πâ‡πÉ‡∏ä‡πâ OpenAI API ‡∏´‡∏£‡∏∑‡∏≠ LLM ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏Å‡∏±‡∏ö coreText)
  const keywords = question.split(" ").slice(0, 3).join(" ");
  const demo = coreText.slice(0, 200); // ‡∏ï‡∏±‡∏î‡∏°‡∏≤‡πÇ‡∏ä‡∏ß‡πå sample context

  return `üîÆ ‡∏Ñ‡∏≥‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö "${question}"\n\n(‡∏≠‡πâ‡∏≤‡∏á‡∏≠‡∏¥‡∏á‡∏à‡∏≤‡∏Å core astrology)\n\n${demo}...`;
}
