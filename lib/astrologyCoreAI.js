// lib/astrologyCoreAI.js
import fs from "fs";
import path from "path";
import OpenAI from "openai";

// ‚úÖ ‡πÇ‡∏´‡∏•‡∏î API key
const openai = new OpenAI({
  apiKey: process.env.OPENAI_API_KEY,
});

// ‚úÖ ‡πÇ‡∏´‡∏•‡∏î core file (markdown)
const corePath = path.join(process.cwd(), "astrology-core-v.1.3.md");
let coreText = "";

try {
  if (fs.existsSync(corePath)) {
    coreText = fs.readFileSync(corePath, "utf8");
    console.log("‚úÖ astrology core loaded:", corePath);
  } else {
    console.warn("‚ö†Ô∏è Core file not found:", corePath);
  }
} catch (err) {
  console.error("‚ùå Error reading core file:", err.message);
}

/**
 * ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢‡∏î‡∏ß‡∏á‡∏î‡πâ‡∏ß‡∏¢ AI
 * - question: ‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡∏à‡∏≤‡∏Å‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
 * - ‡πÉ‡∏ä‡πâ coreText ‡πÄ‡∏õ‡πá‡∏ô context
 */
export async function getAstrologyPrediction(question) {
  if (!coreText) {
    return "‚ùå ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• core astrology ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏Ñ‡∏£‡∏±‡∏ö";
  }

  // üîπ Prompt ‡∏ó‡∏µ‡πà‡∏™‡πà‡∏á‡πÑ‡∏õ‡πÉ‡∏´‡πâ‡πÇ‡∏°‡πÄ‡∏î‡∏•
  const prompt = `
‡∏Ñ‡∏∏‡∏ì‡∏Ñ‡∏∑‡∏≠‡πÇ‡∏´‡∏£‡∏≤‡∏à‡∏≤‡∏£‡∏¢‡πå‡∏ú‡∏π‡πâ‡πÄ‡∏ä‡∏µ‡πà‡∏¢‡∏ß‡∏ä‡∏≤‡∏ç‡πÉ‡∏ô‡∏®‡∏≤‡∏™‡∏ï‡∏£‡πå‡∏î‡∏ß‡∏á‡∏ä‡∏∞‡∏ï‡∏≤
‡πÉ‡∏ä‡πâ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡πà‡∏≠‡πÑ‡∏õ‡∏ô‡∏µ‡πâ‡πÄ‡∏õ‡πá‡∏ô‡∏ê‡∏≤‡∏ô‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏π‡πâ‡∏´‡∏•‡∏±‡∏Å‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡∏≠‡∏ö:
---
${coreText.slice(0, 8000)}  // ‡∏à‡∏≥‡∏Å‡∏±‡∏î context ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô input ‡πÉ‡∏´‡∏ç‡πà‡πÄ‡∏Å‡∏¥‡∏ô‡πÑ‡∏õ
---
‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡∏à‡∏≤‡∏Å‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ: "${question}"

‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏≠‡∏ö‡πÄ‡∏õ‡πá‡∏ô‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢ ‡πÉ‡∏´‡πâ‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡∏ä‡∏±‡∏î‡πÄ‡∏à‡∏ô ‡∏Å‡∏£‡∏∞‡∏ä‡∏±‡∏ö
‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏õ‡∏è‡∏¥‡∏ö‡∏±‡∏ï‡∏¥‡πÄ‡∏•‡πá‡∏Å‡∏ô‡πâ‡∏≠‡∏¢‡∏ñ‡πâ‡∏≤‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏°
`;

  try {
    const resp = await openai.chat.completions.create({
      model: "gpt-4o-mini",   // ‡∏´‡∏£‡∏∑‡∏≠ gpt-4.1 ‡πÑ‡∏î‡πâ‡∏ñ‡πâ‡∏≤‡∏Ñ‡∏∏‡∏ì‡πÄ‡∏õ‡∏¥‡∏î‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå
      messages: [
        { role: "system", content: "‡∏Ñ‡∏∏‡∏ì‡∏Ñ‡∏∑‡∏≠‡πÇ‡∏´‡∏£‡∏≤‡∏à‡∏≤‡∏£‡∏¢‡πå AI" },
        { role: "user", content: prompt },
      ],
      temperature: 0.7,
    });

    return resp.choices[0].message.content.trim();
  } catch (err) {
    console.error("‚ùå Error from OpenAI:", err.message);
    return "‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ñ‡∏≥‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢‡πÑ‡∏î‡πâ‡πÉ‡∏ô‡∏Ç‡∏ì‡∏∞‡∏ô‡∏µ‡πâ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡∏†‡∏≤‡∏¢‡∏´‡∏•‡∏±‡∏á";
  }
}
