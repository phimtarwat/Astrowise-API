// api/fortuneProxy.js
import { findUser, updateUsage } from "../lib/googleSheet.js";
import { getAstrologyPrediction } from "../lib/astrologyCore.js";

export default async function handler(req, res) {
  // ✅ รองรับเฉพาะ POST
  if (req.method !== "POST") {
    return res.status(405).json({ error: "method_not_allowed" });
  }

  const { user_id, token, question } = req.body;

  // 🔎 ตรวจสอบ input
  if (!user_id || !token || !question) {
    return res.status(400).json({
      error: "missing_fields",
      message: "❌ ต้องส่ง user_id, token และ question มาด้วย",
    });
  }

  // 🔍 หา user จาก Google Sheet
  const user = await findUser(user_id, token);
  if (!user) {
    return res.status(401).json({
      error: "invalid",
      message: "❌ ไม่พบ user_id/token ในระบบ กรุณาซื้อแพ็กเกจใหม่ค่ะ",
    });
  }

  // 📌 ตรวจ expiry
  const today = new Date().toISOString().slice(0, 10);
  if (user.expiry && today > user.expiry) {
    return res.status(401).json({
      error: "expired",
      message: "❌ สิทธิ์หมดอายุแล้ว กรุณาซื้อแพ็กเกจใหม่ค่ะ",
    });
  }

  // 🎟️ ตรวจ quota
  if (user.quota <= 0) {
    return res.status(401).json({
      error: "no_quota",
      message: "❌ สิทธิ์หมดแล้ว กรุณาซื้อแพ็กเกจใหม่ค่ะ",
    });
  }

  try {
    // ✨ เรียก core astrology (ดึงผลจริงจาก lib/astrologyCore.js)
    const fortune = await getAstrologyPrediction(question);

    // ✅ ถ้าได้ผลลัพธ์ → หัก quota
    const newQuota = user.quota - 1;
    const updated = await updateUsage(user_id, token, newQuota);

    if (!updated) {
      return res.status(500).json({
        error: "update_failed",
        message: "❌ ไม่สามารถอัปเดต quota ใน Google Sheet ได้",
      });
    }

    // ⚠️ เตือนถ้า quota ใกล้หมด
    let warning = "";
    if (newQuota < 3) {
      warning = `⚠️ เหลือสิทธิ์อีก ${newQuota} ครั้ง`;
    }

    // ✅ ส่งผลลัพธ์กลับ
    return res.json({
      success: true,
      remaining: newQuota,
      used: user.used_count + 1,
      answer: fortune,
      warning,
    });
  } catch (err) {
    console.error("❌ Error generating fortune:", err.message);
    return res.status(500).json({
      error: "fortune_failed",
      message: "❌ ไม่สามารถสร้างคำทำนายได้ กรุณาลองใหม่ค่ะ",
    });
  }
}
