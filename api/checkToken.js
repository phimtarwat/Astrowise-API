// api/checkToken.js
import { findUser } from "../lib/googleSheet.js";

export default async function handler(req, res) {
  try {
    // ‚úÖ 1) ‡∏ö‡∏±‡∏á‡∏Ñ‡∏±‡∏ö‡πÉ‡∏ä‡πâ GET ‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô
    if (req.method !== "GET") {
      return res.status(405).json({
        status: "error",
        message: "‚ùå Method not allowed",
      });
    }

    // ‚úÖ 2) ‡∏£‡∏±‡∏ö‡∏Ñ‡πà‡∏≤‡πÅ‡∏•‡∏∞ normalize
    const { user_id, token, mode } = req.query;
    const uid = String(user_id || "").trim();
    const tkn = String(token || "").trim();

    // ‚úÖ 3) ‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ mode=check
    if (mode !== "check") {
      return res.status(400).json({
        status: "error",
        message: "‚ùå ‡∏ï‡πâ‡∏≠‡∏á‡∏£‡∏∞‡∏ö‡∏∏ mode=check ‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô",
      });
    }

    // ‚úÖ 4) ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô input ‡πÅ‡∏õ‡∏•‡∏Å ‡πÜ (‡πÄ‡∏ä‡πà‡∏ô script injection)
    const safeId = /^[0-9]+$/.test(uid);
    const safeToken = /^[A-Za-z0-9_-]+$/.test(tkn);
    if (!safeId || !safeToken) {
      return res.status(400).json({
        status: "error",
        message: "‚ùå ‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö user_id ‡∏´‡∏£‡∏∑‡∏≠ token ‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á",
      });
    }

    // ‚úÖ 5) ‡∏´‡∏≤ user
    const user = await findUser(uid, tkn);
    if (!user) {
      return res.status(401).json({
        status: "invalid",
        message: "‚ùå user_id ‡∏´‡∏£‡∏∑‡∏≠ token ‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á",
      });
    }

    // ‚úÖ 6) ‡∏ï‡∏£‡∏ß‡∏à‡∏ß‡∏±‡∏ô‡∏´‡∏°‡∏î‡∏≠‡∏≤‡∏¢‡∏∏
    if (user.expiry && new Date(user.expiry) < new Date()) {
      return res.status(401).json({
        status: "expired",
        message: "‚ùå token ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏´‡∏°‡∏î‡∏≠‡∏≤‡∏¢‡∏∏‡πÅ‡∏•‡πâ‡∏ß ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ã‡∏∑‡πâ‡∏≠‡πÅ‡∏û‡πá‡∏Å‡πÄ‡∏Å‡∏à‡πÉ‡∏´‡∏°‡πà",
        packages: {
          lite: "üëâ Lite (5 ‡∏Ñ‡∏£‡∏±‡πâ‡∏á): [‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà](https://buy.stripe.com/test_5kQ7sM1uJbz5fOW6Nr7Re00)",
          standard: "üëâ Standard (10 ‡∏Ñ‡∏£‡∏±‡πâ‡∏á): [‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà](https://buy.stripe.com/test_28E5kEgpD9qX0U23Bf7Re01)",
          premium: "üëâ Premium (30 ‡∏Ñ‡∏£‡∏±‡πâ‡∏á): [‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà](https://buy.stripe.com/test_3cI3cwddrdHdgT01t77Re02)",
        },
      });
    }

    // ‚úÖ 7) ‡∏ï‡∏£‡∏ß‡∏à quota
    const remaining = Math.max(0, user.quota - user.used_count);
    if (!user.package || remaining <= 0) {
      return res.status(401).json({
        status: "no_quota",
        message: "‚ùå ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏´‡∏°‡∏î ‡∏´‡∏£‡∏∑‡∏≠‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏ã‡∏∑‡πâ‡∏≠‡πÅ‡∏û‡πá‡∏Å‡πÄ‡∏Å‡∏à",
        packages: {
          lite: "üëâ Lite (5 ‡∏Ñ‡∏£‡∏±‡πâ‡∏á): [‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà](https://buy.stripe.com/test_5kQ7sM1uJbz5fOW6Nr7Re00)",
          standard: "üëâ Standard (10 ‡∏Ñ‡∏£‡∏±‡πâ‡∏á): [‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà](https://buy.stripe.com/test_28E5kEgpD9qX0U23Bf7Re01)",
          premium: "üëâ Premium (30 ‡∏Ñ‡∏£‡∏±‡πâ‡∏á): [‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà](https://buy.stripe.com/test_3cI3cwddrdHdgT01t77Re02)",
        },
      });
    }

    // ‚úÖ 8) Success
    console.log("‚úÖ checkToken success:", {
      user_id: user.user_id,
      package: user.package,
      remaining,
    });

    return res.json({
      status: "valid",
      message: "‚úÖ ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ",
      remaining,
      package: user.package,
      expiry: user.expiry,
    });
  } catch (err) {
    console.error("‚ùå checkToken fatal error:", err.message);
    return res.status(500).json({
      status: "error",
      message: "‚ùå ‡∏£‡∏∞‡∏ö‡∏ö‡∏Ç‡∏±‡∏î‡∏Ç‡πâ‡∏≠‡∏á ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡∏†‡∏≤‡∏¢‡∏´‡∏•‡∏±‡∏á",
    });
  }
}
