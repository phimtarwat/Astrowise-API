// api/gptHandler.js
/**
 * ‚úÖ Internal Relay ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Custom GPT
 *  GPT ‡∏à‡∏∞‡πÄ‡∏£‡∏µ‡∏¢‡∏Å endpoint ‡∏ô‡∏µ‡πâ‡πÅ‡∏ó‡∏ô‡∏Å‡∏≤‡∏£‡∏¢‡∏¥‡∏á API ‡∏†‡∏≤‡∏¢‡∏ô‡∏≠‡∏Å‡πÇ‡∏î‡∏¢‡∏ï‡∏£‡∏á
 *  ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏´‡∏•‡∏µ‡∏Å‡πÄ‡∏•‡∏µ‡πà‡∏¢‡∏á popup ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå
 */

export default async function handler(req, res) {
  try {
    if (req.method !== "POST") {
      return res.status(405).json({
        status: "error",
        message: "‚ùå ‡∏ï‡πâ‡∏≠‡∏á‡πÉ‡∏ä‡πâ POST ‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô",
      });
    }

    const { route, payload } = req.body || {};

    if (!route) {
      return res.status(400).json({
        status: "error",
        message: "‚ùå ‡∏ï‡πâ‡∏≠‡∏á‡∏£‡∏∞‡∏ö‡∏∏ route (‡πÄ‡∏ä‡πà‡∏ô askFortune, fortuneProxy, createCheckoutSession)",
      });
    }

    // üîÅ Mapping ‡∏õ‡∏•‡∏≤‡∏¢‡∏ó‡∏≤‡∏á‡∏à‡∏£‡∏¥‡∏á‡πÉ‡∏ô backend ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì
    const routeMap = {
      askFortune: "/api/askFortune",
      fortuneProxy: "/api/fortuneProxy",
      createCheckoutSession: "/api/createCheckoutSession",
      calcChart: "/api/calcChart"
    };

    const targetPath = routeMap[route];
    if (!targetPath) {
      return res.status(400).json({
        status: "error",
        message: `‚ùå route "${route}" ‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á`,
      });
    }

    // üåê URL ‡∏õ‡∏•‡∏≤‡∏¢‡∏ó‡∏≤‡∏á (‡πÄ‡∏ä‡πà‡∏ô AstroWise API)
    const baseURL = process.env.ASTROWISE_API_BASE_URL || "https://astrowise-api.vercel.app";
    const targetURL = `${baseURL}${targetPath}`;

    console.log(`üîÅ gptHandler ‚Üí ${targetURL}`);

    // üì§ ‡∏™‡πà‡∏á‡∏Ñ‡∏≥‡∏Ç‡∏≠‡πÑ‡∏õ‡∏¢‡∏±‡∏á backend ‡∏à‡∏£‡∏¥‡∏á
    const response = await fetch(targetURL, {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify(payload || {}),
    });

    const data = await response.json();

    // üì• ‡∏™‡πà‡∏á‡∏ú‡∏•‡∏Å‡∏•‡∏±‡∏ö GPT
    return res.status(response.status).json(data);
  } catch (err) {
    console.error("‚ùå gptHandler error:", err.message);
    return res.status(500).json({
      status: "error",
      message: "‚ùå Internal relay error: " + err.message,
    });
  }
}
