// api/gptHandler.js
import fetch from "node-fetch";

/**
 * ‚úÖ Internal Relay ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Custom GPT
 * ‡∏£‡∏ß‡∏°‡∏ó‡∏∏‡∏Å API endpoint ‡∏Ç‡∏≠‡∏á Astrowise ‡πÑ‡∏ß‡πâ‡πÉ‡∏ô‡∏à‡∏∏‡∏î‡πÄ‡∏î‡∏µ‡∏¢‡∏ß
 * GPT ‡∏à‡∏∞‡πÄ‡∏£‡∏µ‡∏¢‡∏Å endpoint ‡∏ô‡∏µ‡πâ‡πÅ‡∏ó‡∏ô‡∏Å‡∏≤‡∏£‡∏¢‡∏¥‡∏á API ‡∏†‡∏≤‡∏¢‡∏ô‡∏≠‡∏Å‡πÇ‡∏î‡∏¢‡∏ï‡∏£‡∏á
 */

const routeMap = {
  askFortune: { path: "/api/askFortune", method: "POST" },
  checkToken: { path: "/api/checkToken", method: "GET" },
  createCheckoutSession: { path: "/api/createCheckoutSession", method: "POST" },
  calcChart: { path: "/api/calcChart", method: "POST" },
};

export default async function handler(req, res) {
  try {
    // ‚úÖ ‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï‡πÄ‡∏â‡∏û‡∏≤‡∏∞ POST ‡∏à‡∏≤‡∏Å GPT
    if (req.method !== "POST") {
      return res.status(405).json({
        status: "error",
        message: "‚ùå ‡∏ï‡πâ‡∏≠‡∏á‡πÉ‡∏ä‡πâ POST ‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô",
      });
    }

    const { route, payload } = req.body || {};

    if (!route || !routeMap[route]) {
      return res.status(400).json({
        status: "error",
        message: `‚ùå route ‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏£‡∏∞‡∏ö‡∏∏: ${route}`,
      });
    }

    const baseURL =
      process.env.ASTROWISE_API_BASE_URL || "https://astrowise-api.vercel.app";
    const { path, method } = routeMap[route];
    let targetURL = `${baseURL}${path}`;
    let fetchOptions = { method, headers: { "Content-Type": "application/json" } };

    // ‚úÖ ‡∏ñ‡πâ‡∏≤‡πÄ‡∏õ‡πá‡∏ô GET (‡πÉ‡∏ä‡πâ‡∏Å‡∏±‡∏ö /api/checkToken)
    if (method === "GET") {
      const query = new URLSearchParams(payload || {}).toString();
      targetURL += `?${query}`;
      delete fetchOptions.headers; // ‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡πÉ‡∏ä‡πâ header JSON
    } else {
      // ‚úÖ POST (askFortune, createCheckoutSession, calcChart)
      fetchOptions.body = JSON.stringify(payload || {});
    }

    console.log(`üîÅ gptHandler ‚Üí ${method} ${targetURL}`);

    // ‚úÖ ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÑ‡∏õ‡∏¢‡∏±‡∏á API ‡∏à‡∏£‡∏¥‡∏á
    const response = await fetch(targetURL, fetchOptions);
    const data = await response.json();

    // ‚úÖ ‡∏™‡πà‡∏á‡∏ï‡πà‡∏≠‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡∏Å‡∏•‡∏±‡∏ö‡πÉ‡∏´‡πâ GPT
    return res.status(response.status).json(data);
  } catch (err) {
    console.error("‚ùå gptHandler error:", err.message);
    return res.status(500).json({
      status: "error",
      message: "‚ùå Internal relay error: " + err.message,
    });
  }
}
